
# duckdb: curl https://install.duckdb.org | sh
# mediainfo:  sudo dnf install mediainfo
[plugin]
prepend_previewers = [
    { name = "*.md", run = "glow" },
    { name = "*.csv", run = "duckdb" },  
    { name = "*.tsv", run = "duckdb" },  
    { name = "*.json", run = "duckdb" },  
    { name = "*.parquet", run = "duckdb" },  
    { name = "*.txt", run = "duckdb" },  
    { name = "*.xlsx", run = "duckdb" },  
    { name = "*.db", run = "duckdb" },
    { name = "*.duckdb", run = "duckdb" },
    # Replace magick, image, video with mediainfo
    { mime = "{audio,video,image}/*", run = "mediainfo" },
    { mime = "application/subrip", run = "mediainfo" },
    { mime = "application/*zip",            run = "ouch" },
	{ mime = "application/x-tar",           run = "ouch" },
	{ mime = "application/x-bzip2",         run = "ouch" },
	{ mime = "application/x-7z-compressed", run = "ouch" },
	{ mime = "application/x-rar",           run = "ouch" },
    { mime = "application/x-xz",            run = "ouch" },
	{ mime = "application/xz",              run = "ouch" },
]

prepend_preloaders = [  
  { name = "*.csv", run = "duckdb", multi = false },  
  { name = "*.tsv", run = "duckdb", multi = false },  
  { name = "*.json", run = "duckdb", multi = false },  
  { name = "*.parquet", run = "duckdb", multi = false },
  { name = "*.txt", run = "duckdb", multi = false },  
  { name = "*.xlsx", run = "duckdb", multi = false },
    # Replace magick, image, video with mediainfo
    { mime = "{audio,video,image}/*", run = "mediainfo"},
    { mime = "application/subrip", run = "mediainfo" },
]

[manager]
ratio = [1, 2, 5]
linemode="size"
show_symlink=true
[opener]
extract = [
	{ run = 'ouch d -y "%*"', desc = "Extract here with ouch", for = "windows" },
	{ run = 'ouch d -y "$@"', desc = "Extract here with ouch", for = "unix" },
]

[[plugin.prepend_fetchers]]
id   = "git"
name = "*"
run  = "git"

[[plugin.prepend_fetchers]]
id   = "git"
name = "*/"
run  = "git"

